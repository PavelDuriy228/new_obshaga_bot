from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import random

adm_menu_markup = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ä–æ—Å—Ç—É", callback_data="adm_add_starst"), 
        InlineKeyboardButton(text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ—Å—Ç", callback_data="edit_starst")
    ],
    [InlineKeyboardButton(text="üìà–°—Ç–∞—Ç–∏—Å—Ç–∫–∞", callback_data="adm_statistik")],
    [InlineKeyboardButton(text="–°—Å—ã–ª–∫–∏ –¥–ª—è —Å—Ç–∞—Ä–æ—Å—Ç", callback_data="stars_urls:0")],
    [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="send_for_all")]
])

edit_strst = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–°–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä–æ—Å—Ç—É", callback_data="replace_strst")],
    [InlineKeyboardButton(text="üóëÔ∏è–¶–µ–ª–∏–∫–æ–º —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ—Å—Ç—É", callback_data="del_strst")],
    [InlineKeyboardButton(text="üè†–î–æ–º–æ–π", callback_data="adm_menu")]
])

home_admin = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üè†–î–æ–º–æ–π", callback_data="adm_menu")]
])

eventor_markup = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", callback_data="create_event")],
    [InlineKeyboardButton(text="–ê–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", callback_data="active_events:0")],
    [InlineKeyboardButton(text="–í—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", callback_data="all_events:0")],
    [InlineKeyboardButton(text="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é", callback_data="search_event")]
])

# –ú–µ–Ω—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async def GetMenuForEdit(id):    
    menu_for_edi_markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"otmena:{id}")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è", callback_data=f"edit_time:{id}")],
        [InlineKeyboardButton(text="–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ", callback_data=f"rebuild:{id}")],
        [InlineKeyboardButton(text="–°–æ–æ–±—â–∏—Ç—å —Å–ª–µ–¥—è—â–∏–º", callback_data=f"send_to_followers:{id}")]            
    ])
    return menu_for_edi_markup

home_eventor = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üè†–î–æ–º–æ–π", callback_data="eventor_menu")]
])

mini_games= InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="–®–∫–∞—Ç—É–ª–∫–∞", callback_data="shkatulka"),
        InlineKeyboardButton(text="–ü–æ –õ–∞–ø–ª–∞—Å—É", callback_data="laplas")
    ]
])

async def create_shkatulki()->InlineKeyboardMarkup:
    vars = ['win_shk:0', 'win_shk:1', 'win_shk:0']
    random.shuffle(vars)
    keyboard = [
        [
            InlineKeyboardButton(text="üéÅ", callback_data=f"{vars[0]}"),
            InlineKeyboardButton(text="üéÅ", callback_data=f"{vars[1]}")
        ],
        [InlineKeyboardButton(text="üéÅ", callback_data=f"{vars[2]}")]
    ]    
    markup = InlineKeyboardMarkup(
        inline_keyboard=keyboard
    )
    return markup

async def etagi_inl(
    etagi:list[str],
    id_etag:list[int]
)->InlineKeyboardMarkup:
    keyboard = [
        # [InlineKeyboardButton(text="üîù–¢–æ–ø —Å—Ç—É–¥–µ–Ω—Ç–æ–≤", callback_data="full_statik:0")],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="user_menu")],
        # –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–ª–∞–≥ 25  –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        [InlineKeyboardButton(text=f"{etagi[0]}", callback_data=f"view_studs:{id_etag[0]}:0:0")]
    ]
    for etag in range(1, len(etagi), 2):
        if etag+1< len(etagi):
            keyboard.append([
                InlineKeyboardButton(text=f"{etagi[etag]}", callback_data=f"view_studs:{id_etag[etag]}:0:0"),
                InlineKeyboardButton(text=f"{etagi[etag+1]}", callback_data=f"view_studs:{id_etag[etag+1]}:0:0")
            ])
        else:
            keyboard.append(
                [InlineKeyboardButton(text=f"{etagi[etag]}", callback_data=f"view_studs:{id_etag[etag]}:0:0")]
            )
    markup = InlineKeyboardMarkup(
        inline_keyboard=keyboard
    )
    return markup

text_for_button = "–°–≤—è–∑–∞—Ç—å—Å—è"

studsovet_urls = [    
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/id873206802")],
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/moncherej") ],
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/artleiven")],    # malika
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/sashapinegina")],# Pinegina
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/guli_cat")], # Gulia
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/alexey12359")], # lesha J    
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/holidayco")], # –ë–∞–π—Ä–∞–º    
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/i_alok_akok")], # –ë–∞–π—Ä–∞–º
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/i.a.hildebrandt")], # Ilia
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/didomoon")], # Didar
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/lumifluxxx")],    # Djelil
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/oxyjenium")], # Jeny
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/hashirra")], # Ivan
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/anichurd")],# Leny
    [InlineKeyboardButton(text=text_for_button, url= "https://vk.com/idsainsanya")] # Sasha
]

